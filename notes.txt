Reference web app implementation is a single page.
Draggable widgets are per-module.
Each module forms a widget.
You can open a widget and edit it. 
You can scroll around using native scrolling in the area.


What should I use for my quotation building?
When you're building quotes, you just insert stuff.
I need quote, unquote, and spread.


All I need is quote, unquote, and spread.
What about spreading vs repeating elements?
Repeating elements is a supertype.
(spread (List Program)) is the same as (spread Program) because in both cases, it's just a program.

Syntax is untyped. But how is it untyped if I do something like 
(let (data (make-user-data))
 (' foo bar ''data))
where the data is included specifically in the quote?
What data is actually unprintable?
None, you can always write any data.

what are my primitive operations?

allocate stack space
push something to the stack
store program instructions

primitive operations:

1. call function
2. return value
3. construct number
4. construct list
5. define variable
6. define function
7. define 


formal specification.
I have to specify grammar, type rules, and semantics for each expression.
That's not so bad.
How do I make it interactive though?
I add it to the runtime?
The interpreter is the formal specification?
Well, I specify a grammar using my own expressions.
It's okay if it's a circular definition.
Special attention to pattern matching algorithm and subtyping algorithm.