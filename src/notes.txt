Organization:
 The actual definition of the language interpreter is in the header file.
 It's organized as an OS agnostic header-only library.
 OS-dependent things are implemented in the c file which includes the header.
 
I should optimize for the case that I know the size of everything.
Garbage collection and not knowing the size of things should be the exception.
Specifically when I start using lists and appending and things like that.
Basically string manip.

How are modules stored?
Are they lists of lists?
Are they dictionaries?
Hash tables are hard to get performant for all cases.
Hash tables also make modules less portable.
